{
  "version": 3,
  "sources": ["../src/utils/formatTimer.js", "../src/utils/sanitizeVisualiserBarCount.js", "../src/audioVisualiser.js"],
  "sourcesContent": ["const formatTimer = (timerSec) => {\n\tconst pad = (n) => (n < 10 ? `0${n}` : n)\n\n\tconst h = Math.floor(timerSec / 3600)\n\tconst m = Math.floor(timerSec / 60) - h * 60\n\tconst s = Math.floor(timerSec - h * 3600 - m * 60)\n\n\treturn `${pad(m)}:${pad(s)}`\n}\n\nexport default formatTimer\n", "const sanitizeVisualiserBarCount = (barCount) => {\n\tlet next = Math.pow(2, Math.ceil(Math.log(barCount) / Math.log(2)))\n\n\treturn next\n}\n\nexport default sanitizeVisualiserBarCount\n", "import formatTimer from \"./utils/formatTimer\"\nimport sanitizeVisualiserBarCount from \"./utils/sanitizeVisualiserBarCount\"\n\nclass AudioVisualiser extends HTMLElement {\n\tconstructor() {\n\t\tsuper()\n\n\t\tconst shadow = this.attachShadow({ mode: 'open' })\n\n        const audioType = this.hasAttribute('audio-type') ? this.getAttribute('audio-type') : 'video'\n        const audioSrc = this.getAttribute('audio-src')\n        const visualiserColor = this.hasAttribute('visualiser-color')\n            ? this.getAttribute('visualiser-color')\n            : 'plum'\n        const controlsColor = this.hasAttribute('controls-color')\n            ? this.getAttribute('controls-color')\n            : 'black'\n        const defaultClasses = this.getAttribute('default-classes')\n\n        let visualiserBarCount = this.hasAttribute('visualiser-bar-count')\n            ? this.getAttribute('visualiser-bar-count')\n            : '50'\n\n        visualiserBarCount = sanitizeVisualiserBarCount(visualiserBarCount)\n\n        const barArr = [...Array(visualiserBarCount)]\n\t\tconst barList = barArr\n\t\t\t.map(() => {\n\t\t\t\treturn `<div class='bar ${defaultClasses}'></div>`\n\t\t\t})\n\t\t\t.join(' ')\n\n\t\tconst template = document.createElement('template')\n\t\ttemplate.innerHTML = `\n            <style>\n                * {\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }\n\n                video, audio {\n                    display: none;\n                }\n\n                .barsContainer {\n                    height: 255px;\n                    display: flex;\n                    justify-content: center;\n                    gap: 2px;\n                }\n\n                .bar {\n                    width: 4px;\n                    background-color: ${visualiserColor};\n                }\n\n                .neon {\n                    background-color: #a4508b;\n                    background-image: linear-gradient(0deg, #a4508b 0%, #5f0a87 74%);\n                    box-shadow: 1px 1px 30px rgba(81,45,168 ,1);\n                }\n\n                .controls {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    gap: 1rem;\n                    color: ${controlsColor};\n                }\n\n                .play {\n                    background: none;\n                    border: none;\n                }\n\n                .volume {\n                    width: 4rem;\n                }\n\n                .timer {\n                    font-size: 1.2rem;\n                }\n\n                svg {\n                    height: 2rem;\n                    cursor: pointer;\n                }\n            </style>\n            <div>\n                ${\n\t\t\t\t\taudioType === 'video'\n\t\t\t\t\t\t? `<video controls src='${audioSrc}'></video>`\n\t\t\t\t\t\t: `<audio controls src='${audioSrc}'></audio>`\n\t\t\t\t}\n\n                <div class='barsContainer'>\n                    ${barList}\n                </div>\n\n\n\t\t\t\t<div class='controls'>\n                    <button class='play'>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"${controlsColor}\">\n                            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clip-rule=\"evenodd\" />\n                        </svg>\n                    </button>\n                    <div class='timer'>00:00</div>\n                    <input class='volume' min='0' max='100' value='100' type='range'>\n                </div>\n            </div>\n            `\n\n\t\tshadow.appendChild(template.content.cloneNode(true))\n\n        const audioTag = this.shadowRoot.querySelectorAll('video, audio')[0]\n        const bars = this.shadowRoot.querySelectorAll('.bar')\n\n        //Controls\n        const controlsPlay = this.shadowRoot.querySelector('.play')\n        const controlsTimer = this.shadowRoot.querySelector('.timer')\n        const controlsVolume = this.shadowRoot.querySelector('.volume')\n\n        controlsPlay.addEventListener('click', () => {\n            audioTag.paused ? audioTag.play() : audioTag.pause()\n        })\n\n        controlsVolume.addEventListener('change', (e) => {\n\t\t\t\taudioTag.volume = e.target.value / 100\n\t\t})\n\n        audioTag.addEventListener('timeupdate', (e) => {\n\t\t\t\tcontrolsTimer.textContent = formatTimer(e.target.currentTime)\n\t\t})\n\n        //Analyser\n\t\tlet isPlaying = false\n\t\tlet context = new AudioContext()\n\t\tlet source = context.createMediaElementSource(audioTag)\n\t\tlet analyser = context.createAnalyser()\n\n\t\tsource.connect(analyser)\n\t\tanalyser.connect(context.destination)\n\t\tanalyser.fftSize = visualiserBarCount * 2\n\n\t\tlet bufferLength = analyser.frequencyBinCount\n\t\tlet frequencyData = new Uint8Array(bufferLength)\n\n        audioTag.addEventListener('playing', () => {\n            isPlaying = true\n\n            controlsPlay.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"${controlsColor}\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                </svg>\n            `\n\n            renderFrame()\n        })\n\n        audioTag.addEventListener('pause', () => {\n            controlsPlay.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"${controlsColor}\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clip-rule=\"evenodd\" />\n                </svg>\n            `\n        })\n\n        function renderFrame() {\n\t\t\tif (!isPlaying) return\n\n\t\t\trequestAnimationFrame(renderFrame)\n\t\t\tanalyser.getByteFrequencyData(frequencyData)\n\n            for (let i = 0; i < bufferLength; i++) {\n                let barHeight = frequencyData[i];\n                let scalePerc = barHeight/255\n\n                bars[i].style.transform = `scaleY(${scalePerc})`\n            }\n\t\t}\n\t}\n}\n\ncustomElements.define('audio-visualiser', AudioVisualiser)"],
  "mappings": "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",
  "names": []
}
